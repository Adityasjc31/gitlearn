git config --global user.email
git config --global user.email <email>
git config --global user.name
git config --global user.name <name>
git init // initiation of repo
ls -lart //to show hidden files
git add ./<filename>
touch <filename> // to create new file with `filename`
git add -A//To add all files
git commit -m "message"
git checkout <filename>/-f(to restore all the files in directory)
git log
git log -p -1//All the changes made,and number of commits requested in detail
            ^
            (number of commits to see)
git diff //gives difference from staging area to current working tree
git diff --staged //gives difference from last commit with stage
git commit -a -m "Skipped staging area and making commit"
git rm <filename> //to remove file and from the staging area as well
git rm --cached <filename>//to remove file from staging area only
git status -s//short status
git branch <name of branch> //to create a new branch
git branch //to display branches and in which we are working on
git checkout <branchName> //to switch to a branch specified
git merge <branchName> //Changes takes place in the branch which we are currently on from the branch name requested
git checkout -b <newBranchName>//to create a new branch and switch to it

Remote connection
git remote add <urlname> <url> //Add a new `url` with `urlname`
git remote // display all the urlname
git remote -v //display all the urlname with it's fetch and push urls
git push origin master // This pushes the local repository to remote but if and only if it is present and kept public


Read Access for private repository
Getting SSH keys
Generation of SSH keys :
    ssh-keygen -t ed25519 -C "<email>" // To generate a public/private SSH keys
To get agent process id :
    eval "$(ssh-agent -s)"
Adding SSH private key to SSH-Agent :
    ssh-add ~/.ssh/id_ed25519
clip < ~/.ssh/id_ed25519.pub //to copy ssh key to clipboard
cat ~/.ssh/id_ed25519.pub //to print ssh key to console
Setting url to push :
    git remote set-url origin <url>
    
Pushing to private repository :
        git push -u <urlname> <branchname>